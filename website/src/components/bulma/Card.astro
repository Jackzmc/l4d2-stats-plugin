---
import { Icon } from 'astro-icon/components'
import BulmaIcon from './BulmaIcon.astro'
interface Props {
    title: string,
    /** Should element start collapsed (default true) */
    collapsed?: boolean
}
const { title, collapsed = true } = Astro.props
---


<div class="card" data-collapsed={collapsed ? "true" : "false"}>
  <header class="card-header is-clickable">
    <p class="card-header-title mb-0">{ title }</p>
    <!-- hide button by default, until JS kicks in. If user has JS disabled, card will be shown -->
    <button class="card-header-icon" aria-label="toggle card" style="display:none">
      <BulmaIcon name="weui:back-outlined" />
    </button>
  </header>
  <div class="card-content">
    <slot />
  </div>
</div>

<script>
const cards = document.querySelectorAll<HTMLElement>('div.card');

cards.forEach((card) => {
    const cardHeader = card.querySelector<HTMLElement>("header.card-header")
    const button = card.querySelector<HTMLButtonElement>("header.card-header button.card-header-icon")
    const content = card.querySelector<HTMLElement>("div.card-content")
    if(!button || !content || !cardHeader) return console.error("Invalid card", card)

    // Show or hide the card deepnding on data-collapsed
    const startCollapsed = card.dataset.collapsed === "true"
    button.style.display = "block"
    content.style.display = startCollapsed ? "none" : "block"
    button.style.rotate = startCollapsed ? "-90deg" : "90deg"

    function onClick() {
      const isHidden = content!.style.display === "none"
      content!.style.display = isHidden ? "block" : "none"

      button!.style.rotate = isHidden ? "90deg" : "-90deg"
    }

    cardHeader.addEventListener("click", onClick)
  });
</script>
