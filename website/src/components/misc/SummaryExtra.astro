---
function formatNumber(number: number) {
    return Number(number).toLocaleString(undefined, {
        maximumFractionDigits: 0
    })
}
interface Props {
    values: Record<string, number>
}
const { values } = Astro.props
---

<div>
    <nav class="level">
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Boomers Killed</p>
            <p class="title"><span class="countup">{formatNumber(values.boomer_kills)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Jockeys Killed</p>
            <p class="title"><span class="countup">{formatNumber(values.jockey_kills)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Smokers Killed</p>
            <p class="title"><span class="countup">{formatNumber(values.smoker_kills)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Spitters Killed</p>
            <p class="title"><span class="countup">{formatNumber(values.spitter_kills)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Hunters Killed</p>
            <p class="title"><span class="countup">{formatNumber(values.hunter_kills)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Chargers Killed</p>
            <p class="title"><span class="countup">{formatNumber(values.charger_kills)}</span></p>
            </div>
        </div>
    </nav>
    <nav class="level">
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Pills Used</p>
            <p class="title"><span class="countup">{formatNumber(values.PillsUsed)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Adrenalines Used</p>
            <p class="title"><span class="countup">{formatNumber(values.AdrenalinesUsed)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Kits Used (Self)</p>
            <p class="title"><span class="countup">{formatNumber(values.MedkitsUsed - values.FirstAidShared)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Kits Used (Shared)</p>
            <p class="title"><span class="countup">{formatNumber(values.FirstAidShared)}</span></p>
            </div>
        </div>
    </nav>
    <nav class="level">
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Incaps</p>
            <p class="title"><span class="countup">{formatNumber(values.Incaps)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Deaths</p>
            <p class="title"><span class="countup">{formatNumber(values.Deaths)}</span></p>
            </div>
        </div>
        <div class="level-item has-text-centered">
            <div>
            <p class="heading">Revives (Others)</p>
            <p class="title"><span class="countup">{formatNumber(values.ReviveOtherCount)}</span></p>
            </div>
        </div>
    </nav>
</div>