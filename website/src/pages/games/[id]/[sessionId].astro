---
import Layout, { type PageInfo } from "@/layouts/Layout.astro";
let { id: gameId, sessionId } = Astro.params;
if(!gameId || !sessionId) return new Response(null, { status: 404 })

import { getSession, getSessionPlayers } from '../../../models/Game.ts'
import { Difficulty } from "@/types/game.ts";
import { getGamemode, replaceRoute } from "@/utils/index.ts";
import Level from "@/components/bulma/Level.astro";
import LevelItem from "@/components/bulma/LevelItem.astro";


const session = await getSession(sessionId)
if(!session) return Astro.rewrite(`/404?obj=session&id=${Astro.params.sessionId}`)
const otherSessions = await getSessionPlayers(gameId)

const meta: PageInfo = {
	title: `${session.name}'s Session #${session.id} - ${session.map_name}`,
	description: `View statistics for ${session.name}'s game on ${session.map_name}`,
    hero: {
        title: session.map_name,
    },
}

export const prerender = false
---
<Layout meta={meta}>
    <section slot="hero" class="hero has-text-centered is-medium is-dark hero-map-bg" style={{'background-image': `linear-gradient(
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.5)
    ), url("/img/maps/screenshots/${session.map}.jpeg"), url("/img/maps/default.png")`}}>
        <div class="hero-body">
            <!-- <Picture src={getMapPoster(session.map)} alt="map" /> -->
            <p class="title">{session.name}'s Session #{session.id}</p>
            <p class="subtitle pt-2">Played on <b>{session.map_name}</b></p>
        </div>
        <div class="hero-foot">
            <p class="subtitle mb-3">
                {getGamemode(session.gamemode)} • {Difficulty[session.difficulty]} • {session.duration} minutes long
            </p>
        </div>
    </section>
    <br>
    <div class="container">
        <div class="columns">
            <div class="column">
                <Level>
                    <LevelItem countup title="Zombie Kills" value={session.zombie_kills} />
                    <LevelItem countup title="Melee Kills" value={session.melee_kills} />
                    <LevelItem countup title="Damage Dealt" value={session.SurvivorDamage} suffix=" HP" />
                    <LevelItem countup title="Friendly Fires" value={session.SurvivorFFCount} />
                    <LevelItem countup title="Friendly Damage" value={session.SurvivorFFDamage} suffix=" HP" />
                    <LevelItem countup title="Times Friendly Fired" value={session.SurvivorFFTakenCount} />
                    <LevelItem countup title="Friendly Damage Taken" value={session.SurvivorFFTakenDamage} suffix=" HP" />
                </Level>
                <div class="columns">
                    <div class="column is-6">
                        <div class="box has-background-link">
                              <Level>
                                <LevelItem class="has-text-white" title="Biles Thrown" value={session.BoomerBilesUsed} />
                                <LevelItem class="has-text-white" title="Pipes Thrown" value={session.PipebombsUsed} />
                                <LevelItem class="has-text-white" title="Molotovs Thrown" value={session.MolotovsUsed} />
                            </Level>
                        </div>
                        <div class="box has-background-success">
                            <Level>
                                <LevelItem class="has-text-white" title="Smoker Kills" value={session.smoker_kills} />
                                <LevelItem class="has-text-white" title="Boomer Kills" value={session.boomer_kills} />
                                <LevelItem class="has-text-white" title="Spitter Kills" value={session.spitter_kills} />
                            </Level>
                            <Level>
                                <LevelItem class="has-text-white" title="Jockey Kills" value={session.jockey_kills} />
                                <LevelItem class="has-text-white" title="Hunter Kills" value={session.hunter_kills} />
                                <LevelItem class="has-text-white" title="Charger Kills" value={session.charger_kills} />
                            </Level>
                        </div>
                        <p>Campaign ID <a href={`/games/${gameId}`}>{gameId}</a></p>
                    </div>
                    <div class="column">
                        <div class="box has-background-warning">
                            <Level>
                                <LevelItem title="Kits Used" value={session.Medkitsused} />
                                <LevelItem title="Kits Shared" value={session.FirstAidShared} />
                            </Level>
                            <Level>
                                <LevelItem title="Pills Consumed" value={session.PillsUsed} />
                                <LevelItem title="Adrenaline Consumed" value={session.AdrenalinesUsed} />
                            </Level>
                        </div>
                        <!-- <div class="box">
                            <Level>
                                <LevelItem title="Kits Used" value={session.honks} />
                                <LevelItem title="Kits Shared" value={session.RocksHitBy} />
                            </Level>
                            <Level>
                                <LevelItem title="Pills Consumed" value={session.minutes_idle} />
                                <LevelItem title="Adrenaline Consumed" value={session.DamageToWitch} />
                            </Level>
                        </div> -->
                    </div>
                </div>
            </div>
            <div class="column is-3">
                <div class="box">
                    <h4 class="title is-4 mb-2">Players</h4>
                    <ul>
                        {otherSessions.map(player => (
                            <li>
                                <b><a href={`/users/${player.steamid}/overview`}>{player.name}</a></b>
                                {player.sessionId != session.id && 
                                    <a href={replaceRoute(Astro, { sessionid: player.sessionId })} class="is-pulled-right">(view stats)</a>
                                }
                            </li>
                        ))}
                    </ul>
                </div>
                <div class="box content">
                    <strong>Map</strong>
                    <p>{session.map}</p>
                    <div class="columns">
                        <div class="column">
                            <strong>Gamemode</strong>
                            <p>{session.gamemode}</p>
                        </div>
                        <div class="column">
                            <strong>Difficulty</strong>
                            <p>{Difficulty[session.difficulty]}</p>
                        </div>
                    </div>
                    <strong>Most Used Weapon</strong>
                    <p>{session.top_weapon || "-"}</p>
                    {session.honks > 0 && 
                        <strong>Honks</strong>
                        <p>{session.honks}</p>
                    }
                    <strong>Server Tags</strong>
                    <span class="tags">
                        {session.server_tags.map(tag => <span class="tag">{tag}</span>)}
                    </span>
                </div>
            </div>
        </div>
    </div>
</Layout>

<style>
img {
    width: 140px;
    height: 189px;
    display: inline;
    position: relative;
    left: 20px;
    top: 40px;
}
</style>