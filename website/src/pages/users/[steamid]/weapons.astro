---
import Layout, { type PageInfo } from '@/layouts/Layout.astro'
const params = Astro.params
if(!params.steamid) return new Response(null, { status: 404 })

import SteamID from 'steamid'
import { getUser, getUserWeapons } from '@/models/User.ts'
import UserHero from '@/components/misc/UserHero.astro'
import { Image } from 'astro:assets'
import { getWeaponImage, WEAPON_IMAGES } from '@/utils/index.ts'
import { formatDistance } from 'date-fns'
import WeaponTable from '@/components/misc/WeaponTable.astro'

const user = await getUser(params.steamid)
if(!user) return new Response(null, { status: 404 })
const weapons = await getUserWeapons(params.steamid)

const totalMinutes = weapons.reduce((pv, cv) => pv + cv.minutesUsed, 0)

const meta: PageInfo = {
    title: `Weapons - ${user.last_alias}`,
    description: `View ${user.last_alias}'s weapon statistics`,
    hero: {
        type: "is-link",
        title: user.last_alias,
        subtitle: `${user.points.toLocaleString()} points`,
        style: "background-image: linear-gradient(0deg,#008cff,#3a47d5)"
    }
}
const steamid = new SteamID(user.steamid)

---
<Layout meta={meta}>
    <UserHero slot="hero" user={user} subtitle={`${user.points.toLocaleString()} points`} activePage="weapons" />

    <div class="container">
        <h4 class="title is-4">Guns</h4>
        <WeaponTable totalMinutes={totalMinutes} weapons={weapons.filter(weapon => !weapon.melee)} />

        <h4 class="title is-4">Melees</h4>
        <WeaponTable totalMinutes={totalMinutes} weapons={weapons.filter(weapon => weapon.melee)} />
    </div>
</Layout>

